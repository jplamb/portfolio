{"version":3,"sources":["images/profile.jpeg","components/sidebar.js","components/introduction.js","components/about.js","components/projects.js","components/blog.js","components/timeline.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Sidebar","Container","Image","src","logo","roundedCircle","thumbnail","class","Nav","defaultActiveKey","className","Link","href","Component","Introduction","About","Projects","Blog","Timeline","App","fluid","Row","Col","xs","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,sC,8OCMtBC,E,uKAEjB,OACD,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAOC,IAAKC,IAAMC,eAAa,EAACC,WAAS,IACzC,yBAAKC,MAAM,gCAAX,aACA,kBAACC,EAAA,EAAD,CAAKC,iBAAiB,GAAGC,UAAU,eAClC,kBAACF,EAAA,EAAIG,KAAL,CAAUC,KAAK,IAAf,gBACA,kBAACJ,EAAA,EAAIG,KAAL,CAAUC,KAAK,IAAf,YACA,kBAACJ,EAAA,EAAIG,KAAL,CAAUC,KAAK,IAAf,YACA,kBAACJ,EAAA,EAAIG,KAAL,CAAUC,KAAK,IAAf,QACA,kBAACJ,EAAA,EAAIG,KAAL,CAAUC,KAAK,IAAf,kB,GAXgCC,aCJhBC,E,uKAEjB,OACD,6BACC,4CAGA,gG,GAPsCD,aCArBE,E,uKAEjB,OACD,0C,GAHgCF,aCAdG,E,uKAEjB,OACD,2D,GAHmCH,aCAjBI,E,uKAEjB,OACD,qD,GAH+BJ,aCAbK,E,uKAEjB,OACD,yD,GAHmCL,a,gBC+BvBM,E,uKAnBX,OACE,kBAAClB,EAAA,EAAD,CAAWmB,OAAK,GAClB,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAAC,EAAD,OAED,kBAACA,EAAA,EAAD,CAAKC,GAAI,GACR,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,a,GAbYV,aCAEW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.4ca57bdc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.70ac0917.jpeg\";","import React, { Component } from 'react'\nimport logo from '../images/profile.jpeg'; // Tell Webpack this JS file uses this image\nimport Image from 'react-bootstrap/Image';\nimport Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\n\nexport default class Sidebar extends Component {\n  render() {\n    return (\n\t\t\t<Container>\n\t\t\t\t<Image src={logo} roundedCircle thumbnail />\n\t\t\t\t<div class=\"text-center font-weight-bold\">John Lamb</div>\n\t\t\t\t<Nav defaultActiveKey=\"\" className=\"flex-column\">\n\t\t\t\t\t<Nav.Link href=\"\">Introduction</Nav.Link>\n\t\t\t\t\t<Nav.Link href=\"\">About Me</Nav.Link>\n\t\t\t\t\t<Nav.Link href=\"\">Projects</Nav.Link>\n\t\t\t\t\t<Nav.Link href=\"\">Blog</Nav.Link>\n\t\t\t\t\t<Nav.Link href=\"\">Timeline</Nav.Link>\n\t\t\t\t</Nav>\n\t\t\t</Container>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react'\n\nexport default class Introduction extends Component {\n  render() {\n    return (\n\t\t\t<div>\n\t\t\t\t<h3>\n\t\t\t\t\tIntroduction\n\t\t\t\t</h3>\n\t\t\t\t<p>\n\t\t\t\t\tThis is where I will discuss fascinating things about myself\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react'\n\nexport default class About extends Component {\n  render() {\n    return (\n\t\t\t<div>About</div>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react'\n\nexport default class Projects extends Component {\n  render() {\n    return (\n\t\t\t<div>These are the projects</div>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react'\n\nexport default class Blog extends Component {\n  render() {\n    return (\n\t\t\t<div>This is the blog</div>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react'\n\nexport default class Timeline extends Component {\n  render() {\n    return (\n\t\t\t<div>This is the timeline</div>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport Sidebar from './components/sidebar'\nimport Introduction from './components/introduction'\nimport About from './components/about'\nimport Projects from './components/projects'\nimport Blog from './components/blog'\nimport Timeline from './components/timeline'\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nclass App extends Component {\n  render() {\n    return (\n      <Container fluid>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Sidebar></Sidebar>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs={8}>\n\t\t\t\t\t\t<Introduction></Introduction>\n\t\t\t\t\t\t<About></About>\n\t\t\t\t\t\t<Projects></Projects>\n\t\t\t\t\t\t<Blog></Blog>\n\t\t\t\t\t\t<Timeline></Timeline>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}